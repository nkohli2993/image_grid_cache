plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
    id 'com.google.firebase.crashlytics'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
}
//
android {

    compileSdkVersion 33
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.rolling.meadows"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        signingConfig signingConfigs.debug

    }
    dataBinding {
        enabled = true
    }

    signingConfigs {
        debug {
            storeFile file('rolling_meadows.jks')
            storePassword 'rolling_meadows'
            keyAlias 'rolling_meadows'
            keyPassword 'rolling_meadows'
        }
        release {
            storeFile file('rolling_meadows.jks')
            storePassword 'rolling_meadows'
            keyAlias 'rolling_meadows'
            keyPassword 'rolling_meadows'
        }
    }


    kapt { generateStubs = true }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
           // signingConfig signingConfigs.release
        }
    }


/*
    signingConfigs {
        debug {
            storeFile file('key.jks')
            storePassword 'roves2022customer'
            keyAlias 'roves2022customer'
            keyPassword 'roves2022customer'
        }
        release {
            storePassword 'roves2022customer'
            keyAlias = 'roves2022customer'
            keyPassword 'roves2022customer'
            storeFile file('key.jks')
        }
    }
*/

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def project = "rollingMeadows"
            def separator = "_"
            def buildType = variant.buildType.name
            def versionName = variant.versionName
            def versionCode = variant.versionCode
            def date = new Date()
            def formattedDate = date.format('yyyy_MM_dd')
            if (variant.buildType.name == "release") {
                def newApkName = project + separator + "v" + versionName + separator + versionCode + separator + buildType + separator + formattedDate + ".apk"
                output.outputFileName = newApkName
            }
            if (variant.buildType.name == "debug") {
                def newApkName = project + separator + "v" + versionName + separator + versionCode + separator + buildType + ".apk"
                output.outputFileName = newApkName
            }

        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    configurations.all {
        resolutionStrategy {
            exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"

        }
    }
    lintOptions {
        checkReleaseBuilds false
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    implementation("io.coil-kt:coil:1.0.0")
    implementation "androidx.navigation:navigation-fragment-ktx:2.5.3"
    implementation "androidx.navigation:navigation-ui-ktx:2.5.3"
    // Koin for Android
    implementation "org.koin:koin-android:2.2.0"
    // or Koin for Lifecycle scoping
    implementation "org.koin:koin-androidx-scope:2.2.0"
    // or Koin for Android Architecture ViewModel
    implementation "org.koin:koin-androidx-viewmodel:2.2.0"
    implementation "org.koin:koin-androidx-fragment:2.2.0"
    implementation 'com.intuit.sdp:sdp-android:1.1.0'
    implementation 'com.intuit.ssp:ssp-android:1.1.0'
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"
    implementation 'androidx.multidex:multidex:2.0.1'

    //google map
    implementation "com.google.android.gms:play-services-location:21.0.0"
    implementation "com.google.android.gms:play-services-auth:20.3.0"
    implementation 'com.google.android.libraries.places:places:2.6.0'
    implementation "com.google.firebase:firebase-messaging:23.1.0"
    implementation platform('com.google.firebase:firebase-bom:31.0.3')
    implementation 'com.google.firebase:firebase-auth:21.1.0'
    implementation 'com.google.firebase:firebase-crashlytics-ktx:18.3.1'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.maps.android:android-maps-utils:0.5'
    implementation "androidx.paging:paging-runtime-ktx:3.2.0-alpha03"


    implementation 'com.github.nkzawa:socket.io-client:0.6.0'
    implementation 'com.hbb20:ccp:2.5.4'
    implementation "com.wang.avi:library:2.1.3"
    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.google.android.gms:play-services-places:17.0.0'
    implementation 'com.google.android.libraries.places:places:2.7.0'
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation 'com.github.aids61517:EasyRatingView:1.1.0'
    //Pick Media Library
    implementation 'com.github.Mindinventory:Lassi:0.4.0'
    //Image Libraries
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"
    implementation "com.squareup.picasso:picasso:$picassoVersion"
    /**-------------------testing libs------------------------------------------**/
    //UI Testing , AndroidJUnitRunner and JUnit Rules &Espresso dependencies
    //junit 5
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "io.mockk:mockk:$mockVersion"
    androidTestImplementation "org.assertj:assertj-core:$assertjVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoIntentsVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesTestVersion"
    implementation "androidx.arch.core:core-testing:$coreTestingVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    implementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    /**-------------------------------------------------------------**/
    //toasty
    implementation "com.github.GrenderG:Toasty:$toasty_version"

    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.22'

    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
}